#include <Adafruit_NeoPixel.h>

Adafruit_NeoPixel strip1 = Adafruit_NeoPixel(60, 2, NEO_GRB + NEO_KHZ800);
Adafruit_NeoPixel strip2 = Adafruit_NeoPixel(60, 3, NEO_GRB + NEO_KHZ800);

const int colors[30][30][3] PROGMEM = {{{254,255,255}, {255,254,255}, {255,254,255}, {255,254,255}, {254,254,254}, {254,255,253}, {255,255,255}, {255,255,255}, {255,255,253}, {255,255,255}, {255,254,255}, {254,255,255}, {252,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {252,255,255}, {255,254,255}, {255,255,253}, {255,255,255}, {252,255,253}, {255,255,255}, {255,255,253}, {255,254,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}}
, {{255,254,255}, {255,255,253}, {251,255,254}, {255,254,255}, {255,254,255}, {255,255,255}, {255,255,255}, {255,253,255}, {255,255,255}, {255,255,255}, {255,255,253}, {254,255,253}, {255,254,252}, {255,255,253}, {255,254,255}, {255,254,255}, {255,255,255}, {255,254,255}, {255,254,255}, {254,254,255}, {255,254,255}, {255,255,253}, {255,254,255}, {255,255,253}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}}
, {{255,254,255}, {251,255,254}, {255,255,255}, {255,255,255}, {254,255,255}, {255,255,255}, {255,255,253}, {255,255,251}, {254,254,255}, {255,254,255}, {255,254,255}, {255,255,255}, {255,254,255}, {252,255,255}, {255,255,253}, {253,255,254}, {255,255,253}, {255,255,255}, {254,254,254}, {254,255,255}, {255,255,255}, {254,254,254}, {254,255,253}, {254,254,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}}
, {{255,254,255}, {255,254,255}, {255,255,255}, {255,254,255}, {255,254,255}, {254,255,253}, {255,255,255}, {254,255,255}, {255,255,251}, {255,255,255}, {254,254,254}, {255,255,255}, {227,244,228}, {191,232,192}, {167,221,171}, {164,219,164}, {180,225,182}, {206,239,212}, {249,254,248}, {255,255,253}, {254,254,254}, {255,254,253}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}}
, {{254,254,254}, {255,254,255}, {254,255,255}, {255,254,255}, {254,255,251}, {255,255,253}, {255,255,255}, {254,255,253}, {252,255,253}, {255,253,255}, {254,255,255}, {198,232,199}, {149,216,149}, {117,200,118}, {94,194,98}, {93,190,95}, {107,197,109}, {134,207,134}, {178,225,181}, {243,250,243}, {255,254,255}, {254,255,255}, {252,255,255}, {255,255,253}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}}
, {{254,255,253}, {255,255,255}, {255,255,255}, {254,255,253}, {255,255,253}, {251,255,255}, {255,255,255}, {255,254,255}, {255,254,255}, {178,231,187}, {73,213,108}, {91,188,91}, {88,188,90}, {88,190,91}, {88,188,90}, {90,190,91}, {90,190,91}, {89,189,91}, {90,190,92}, {86,191,90}, {160,219,163}, {254,254,252}, {255,255,253}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}}
, {{255,255,255}, {255,255,255}, {255,255,253}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {254,255,253}, {250,135,128}, {218,108,83}, {121,171,86}, {53,212,93}, {75,199,95}, {93,187,93}, {89,191,91}, {88,189,93}, {88,190,90}, {89,191,92}, {88,190,90}, {89,191,91}, {89,188,95}, {112,197,112}, {229,245,234}, {254,254,254}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}}
, {{255,255,255}, {255,253,255}, {255,255,251}, {254,255,255}, {254,255,253}, {255,254,255}, {254,255,253}, {241,123,109}, {235,100,80}, {255,82,78}, {254,79,77}, {186,128,88}, {92,189,94}, {57,211,93}, {79,194,90}, {90,190,91}, {88,190,91}, {86,190,93}, {89,189,90}, {89,189,91}, {89,190,94}, {86,191,90}, {88,190,91}, {232,246,231}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}}
, {{255,255,253}, {254,254,255}, {255,255,255}, {254,255,253}, {255,255,255}, {255,255,253}, {243,140,131}, {239,98,80}, {238,97,79}, {237,97,80}, {238,99,80}, {255,79,79}, {251,90,82}, {160,144,85}, {72,198,88}, {59,207,91}, {85,189,92}, {92,189,92}, {85,191,90}, {89,189,90}, {88,189,93}, {86,190,91}, {85,191,91}, {98,193,101}, {254,254,254}, {254,255,253}, {255,255,255}, {255,254,255}, {255,255,253}, {255,255,255}}
, {{253,255,254}, {255,255,255}, {255,255,255}, {255,255,255}, {255,252,251}, {250,200,193}, {239,96,79}, {238,96,82}, {237,98,79}, {238,97,80}, {238,99,80}, {234,101,82}, {244,81,66}, {254,52,48}, {236,97,77}, {148,158,85}, {67,184,67}, {64,184,69}, {91,191,92}, {86,190,91}, {90,190,91}, {85,190,89}, {90,190,91}, {88,188,89}, {148,212,151}, {254,255,255}, {255,255,253}, {254,255,255}, {254,255,255}, {255,254,255}}
, {{254,255,255}, {255,255,255}, {254,254,252}, {255,255,255}, {255,255,255}, {238,105,90}, {240,98,79}, {237,97,80}, {237,97,82}, {240,97,81}, {238,98,83}, {236,69,50}, {249,108,88}, {255,200,186}, {254,222,227}, {255,216,227}, {239,239,211}, {133,217,129}, {55,178,62}, {85,190,89}, {88,190,91}, {91,188,91}, {86,191,90}, {89,191,92}, {88,190,91}, {232,249,233}, {254,254,254}, {255,255,253}, {255,254,255}, {254,255,255}}
, {{255,255,255}, {255,254,252}, {255,255,253}, {254,255,255}, {250,205,202}, {239,98,79}, {238,97,80}, {235,98,79}, {238,97,80}, {237,100,81}, {236,66,49}, {252,141,121}, {247,255,255}, {122,204,251}, {62,160,219}, {60,156,211}, {114,175,230}, {247,240,255}, {197,238,178}, {58,178,64}, {86,190,93}, {89,191,92}, {89,189,91}, {88,190,91}, {89,191,92}, {161,219,161}, {247,252,248}, {254,254,254}, {255,254,255}, {255,255,255}}
, {{255,254,255}, {255,255,255}, {255,255,253}, {254,254,254}, {243,153,142}, {237,97,82}, {238,97,80}, {240,97,81}, {238,97,79}, {235,85,70}, {249,110,91}, {239,255,252}, {65,166,222}, {14,116,185}, {52,136,198}, {54,139,196}, {26,124,191}, {30,126,195}, {242,242,254}, {172,226,151}, {63,180,66}, {89,189,90}, {87,192,91}, {88,189,93}, {86,191,90}, {114,197,115}, {195,233,196}, {254,255,255}, {254,255,253}, {255,255,253}}
, {{255,255,253}, {255,254,255}, {255,255,255}, {255,255,253}, {242,122,108}, {239,96,79}, {239,97,83}, {238,97,80}, {237,97,82}, {235,69,48}, {253,200,182}, {138,218,255}, {14,110,184}, {64,145,201}, {62,144,198}, {59,142,202}, {64,144,205}, {32,124,191}, {103,161,234}, {244,253,232}, {77,189,76}, {85,190,89}, {88,189,93}, {90,191,89}, {85,189,92}, {67,186,106}, {155,217,178}, {254,255,255}, {251,255,254}, {255,254,255}}
, {{254,255,253}, {255,254,255}, {255,255,255}, {255,255,255}, {240,108,93}, {234,99,79}, {237,98,79}, {238,97,80}, {237,96,79}, {242,77,61}, {255,219,213}, {88,182,234}, {39,132,196}, {60,143,203}, {61,143,197}, {63,141,200}, {62,143,199}, {60,140,203}, {50,135,202}, {219,236,246}, {127,211,113}, {79,185,81}, {91,189,90}, {61,186,105}, {64,188,102}, {152,201,58}, {217,225,124}, {254,254,255}, {255,255,255}, {254,255,255}}
, {{255,254,255}, {255,255,253}, {255,255,253}, {255,255,255}, {239,109,95}, {238,96,82}, {239,96,80}, {237,98,79}, {238,97,79}, {241,79,57}, {255,218,215}, {89,180,233}, {42,131,194}, {60,144,198}, {62,143,201}, {62,143,201}, {62,143,199}, {56,141,200}, {52,135,201}, {221,235,246}, {132,212,115}, {61,184,90}, {58,185,110}, {123,197,75}, {225,213,17}, {255,222,1}, {254,235,104}, {255,254,255}, {253,255,254}, {255,255,253}}
, {{255,254,255}, {255,255,253}, {253,254,255}, {255,254,255}, {241,121,105}, {239,98,81}, {238,97,80}, {239,98,80}, {238,96,82}, {237,75,44}, {255,223,164}, {128,211,255}, {14,115,185}, {64,146,200}, {63,142,201}, {61,142,200}, {64,144,203}, {32,127,191}, {98,161,232}, {235,248,239}, {47,184,98}, {90,191,85}, {197,210,35}, {255,222,3}, {254,220,1}, {254,217,4}, {254,237,121}, {254,254,254}, {255,254,255}, {254,255,255}}
, {{254,255,255}, {254,255,255}, {254,255,255}, {255,255,253}, {242,146,132}, {239,97,78}, {235,98,82}, {240,97,83}, {239,96,80}, {236,79,69}, {254,194,47}, {235,255,255}, {49,144,226}, {21,119,187}, {53,139,196}, {57,142,199}, {30,129,188}, {20,119,195}, {203,231,253}, {167,228,161}, {140,191,29}, {255,218,5}, {255,221,0}, {255,214,0}, {252,217,3}, {252,221,32}, {253,241,165}, {254,255,255}, {255,255,255}, {254,254,252}}
, {{255,255,255}, {255,255,255}, {255,253,254}, {255,255,255}, {249,192,183}, {238,97,80}, {238,97,79}, {239,98,81}, {238,97,79}, {237,82,98}, {248,173,4}, {254,247,68}, {241,250,255}, {105,176,254}, {49,143,217}, {48,139,212}, {83,160,242}, {208,235,255}, {254,250,159}, {225,207,3}, {255,221,0}, {253,217,0}, {252,216,0}, {253,217,0}, {252,216,0}, {253,232,105}, {255,252,237}, {254,255,255}, {255,255,255}, {255,255,255}}
, {{255,254,255}, {254,254,255}, {254,255,253}, {255,255,253}, {253,251,252}, {238,97,80}, {239,98,81}, {238,97,79}, {238,97,80}, {237,82,86}, {247,182,27}, {255,229,0}, {254,227,34}, {252,255,162}, {244,246,224}, {238,240,226}, {255,254,189}, {255,239,75}, {255,208,5}, {254,215,0}, {252,217,3}, {252,217,1}, {255,216,1}, {252,217,3}, {252,216,0}, {255,249,215}, {255,255,253}, {254,255,255}, {255,255,255}, {255,255,253}}
, {{255,255,253}, {254,255,253}, {252,255,255}, {254,255,253}, {255,255,255}, {248,177,171}, {238,98,81}, {238,97,80}, {237,96,79}, {236,82,92}, {249,182,32}, {255,235,0}, {251,211,1}, {255,211,0}, {255,221,0}, {255,222,0}, {254,213,1}, {254,210,0}, {253,217,0}, {253,217,1}, {255,215,0}, {255,216,1}, {254,215,0}, {252,218,0}, {255,226,77}, {254,255,255}, {254,255,255}, {255,255,255}, {255,254,255}, {254,255,255}}
, {{255,254,255}, {255,255,253}, {255,255,253}, {253,255,254}, {255,254,255}, {255,255,255}, {241,125,110}, {237,98,79}, {239,96,79}, {237,83,95}, {248,183,28}, {255,233,0}, {252,218,0}, {254,215,0}, {251,217,0}, {252,215,2}, {254,215,0}, {253,217,0}, {254,215,0}, {253,216,3}, {250,217,0}, {255,216,0}, {253,217,0}, {254,216,8}, {255,253,244}, {254,255,253}, {255,254,255}, {254,255,253}, {255,255,255}, {254,255,253}}
, {{255,255,255}, {255,254,255}, {254,254,254}, {254,255,255}, {254,254,254}, {254,255,255}, {253,248,244}, {240,108,96}, {236,96,79}, {236,82,94}, {250,185,30}, {255,233,0}, {253,217,1}, {252,216,0}, {253,217,0}, {252,216,0}, {251,216,0}, {252,216,0}, {253,217,0}, {253,214,0}, {251,216,2}, {255,216,1}, {252,217,1}, {255,245,205}, {254,254,255}, {255,255,253}, {255,255,253}, {255,255,255}, {255,255,255}, {255,255,255}}
, {{254,255,255}, {255,255,253}, {255,255,255}, {255,255,255}, {255,255,255}, {255,254,255}, {255,255,255}, {255,245,244}, {242,129,115}, {236,80,91}, {248,182,24}, {255,233,0}, {254,215,0}, {254,218,2}, {254,215,0}, {253,217,1}, {255,214,0}, {252,217,1}, {252,216,0}, {255,216,0}, {252,216,0}, {252,219,18}, {255,247,201}, {252,255,255}, {254,255,255}, {255,255,253}, {254,255,255}, {255,255,255}, {255,255,253}, {255,255,255}}
, {{255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {244,172,176}, {248,187,38}, {255,235,0}, {252,215,2}, {253,217,0}, {252,216,0}, {253,217,1}, {252,215,2}, {253,217,0}, {251,216,0}, {252,216,0}, {255,231,105}, {255,253,248}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}}
, {{255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,254,255}, {254,254,254}, {255,254,250}, {253,248,157}, {254,229,78}, {251,221,30}, {253,218,6}, {252,219,4}, {253,221,26}, {255,225,65}, {253,238,137}, {254,251,232}, {255,255,255}, {255,255,253}, {254,255,255}, {254,254,252}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}}
, {{255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,253,254}, {254,255,255}, {254,255,253}, {255,253,248}, {255,245,184}, {254,237,133}, {255,232,100}, {254,231,99}, {255,235,123}, {255,243,175}, {254,251,234}, {255,255,255}, {255,255,255}, {255,255,253}, {255,254,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}}
, {{255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,253}, {255,255,255}, {255,255,253}, {254,254,252}, {254,254,254}, {254,255,255}, {255,255,253}, {254,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {254,255,255}, {255,255,253}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}}
, {{255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,253}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,254,255}, {255,255,255}, {255,254,255}, {255,255,255}, {255,255,255}, {255,255,253}, {255,255,253}, {255,255,253}, {255,254,255}, {255,254,255}, {254,255,251}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}}
, {{255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {254,255,255}, {255,255,253}, {255,254,252}, {255,255,253}, {254,255,255}, {252,255,253}, {254,254,254}, {254,255,255}, {255,255,253}, {255,255,251}, {255,255,255}, {255,254,255}, {255,255,255}, {254,255,255}, {255,255,253}, {255,253,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}, {255,255,255}}
};


void setup() {
  strip1.begin();
  strip2.begin();
}

float pitch = 90;
int PIXEL_NUM = 14;

void loop(){
  float cosV = cos(pitch);
  float sinV = sin(pitch);
  for(int i=0; i<PIXEL_NUM; i++){
    int x = (i+1) * cosV;
    int y = (i+1) * sinV;
    int x2 = 15 - x;
    int y2 = 15 - y;
    x = x + 15;
    y = y + 15;
    
    /*
    int rainbow[7][3] = {{255, 0, 0}, {255,153,0}, {255,255,0}, {0,255,0}, {0,0,255}, {0, 0, 100}, {102, 51, 153}};
    for(int i=0; i<7; i++){
    	strip1.setPixelColor(i+7, rainbow[i][0], rainbow[i][1], rainbow[i][2]);
        //strip1.setPixelColor(i*2+1, rainbow[i][0], rainbow[i][1], rainbow[i][2]);
        strip2.setPixelColor(i+7, rainbow[i][0], rainbow[i][1], rainbow[i][2]);
        //strip2.setPixelColor(i*2+1, rainbow[i][0], rainbow[i][1], rainbow[i][2]);
    }
    */
    strip2.setPixelColor(i, pgm_read_word(&(colors[x][y][0])), pgm_read_word(&(colors[x][y][1])), pgm_read_word(&(colors[x][y][2])));
    strip1.setPixelColor(i, pgm_read_word(&(colors[x2][y2][0])), pgm_read_word(&(colors[x2][y2][1])), pgm_read_word(&(colors[x2][y2][2])));
  }
  strip1.show();
  strip2.show();
  
  pitch = pitch + 0.1;
  if (pitch > 3.14) pitch = pitch - 3.14;
  //delay(10);
}
